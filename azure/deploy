#!/usr/bin/env ruby

ONE_LOCATION=ENV["ONE_LOCATION"] if !defined?(ONE_LOCATION)

if !ONE_LOCATION
    RUBY_LIB_LOCATION="/usr/lib/one/ruby" if !defined?(RUBY_LIB_LOCATION)
else
    RUBY_LIB_LOCATION=ONE_LOCATION+"/lib/ruby" if !defined?(RUBY_LIB_LOCATION)
end

$: << RUBY_LIB_LOCATION
$: << File.dirname(__FILE__)

require './azure_driver.rb'
require 'opennebula'
require 'pry'

dfile = ARGV[0]
host  = ARGV[1]
id    = ARGV[2]

vm = OpenNebula::VirtualMachine.new_with_id(id, OpenNebula::Client.new)
vm.info

lcm_state = vm.lcm_state_str
deploy_id = vm.deploy_id
cloud = vm.to_hash['VM']['USER_TEMPLATE']['PUBLIC_CLOUD'] #==)
# (===>
#       {
#         "IMAGE": "b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-16_04-LTS-amd64-server-20170727-en-us-30GB",
#         "INSTANCE_TYPE": "Small",
#         "LOCATION": "West Europe",
#         "SSHPORT": "52222",
#         "STORAGE_ACCOUNT": "az7gn6o008zqggwp",
#         "SUBNET": "default",
#         "TYPE": "AZURE",
#         "VIRTUAL_NETWORK_NAME": "Group az7gn6o008zqggwp az7gn6o008zqggwp-vnet",
#         "VM_PASSWORD": "Nhb500Gznmcjn",
#         "VM_USER": "azureuser"
#       }

# az_drv = AzureDriver.new(host)

az_drv = AzureDriver::Driver.new

binding.pry

# az_drv.mk_storage_account 'testo6666', 'oneadminspace0', 'westeurope', 'Standard_LRS'

# exit -1 

# begin
#     puts az_drv.deploy(id, host, text, lcm_state, deploy_id)
# rescue => e
#     STDERR.puts "Error deploying Azure VM: " + e.message
#     exit -1
# end